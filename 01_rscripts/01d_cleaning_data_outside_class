# Load the necessary libraries
library(janitor)
library(lubridate)
library(readr)
library(stringr)
library(dplyr)
library(ggplot2)
library(purrr)
library(tidyr)

# load csv file
combined_data <- read_csv("rough_work/combined_data.csv")
View(combined_data)

# removing upper case letters and adding "_"
combined_clean_data <- combined_data %>%
  clean_names() %>%                # Clean column names
  mutate(across(everything(), ~ str_replace_all(., " ", "_"))) %>%  # Replace spaces with underscores
  mutate(across(everything(), tolower)) %>%  # Convert all to lowercase
  mutate(scientific_name = str_to_title(scientific_name))  # Convert scientific_name to title cas
# View the cleaned dataset
View(combined_clean_data)

# remove all na. rows
combined_clean_data <- na.omit(combined_clean_data)
View(combined_clean_data)

#make sure everything is numeric
combined_clean_data$trophic_position <- as.numeric(as.character(combined_clean_data$trophic_position))
combined_clean_data$tro_standard_error <- as.numeric(as.character(combined_clean_data$tro_standard_error))
combined_clean_data$body_mass_in_grams <- as.numeric(as.character(combined_clean_data$body_mass_in_grams))
combined_clean_data$mr_raw_mg_per_kg_per_h <- as.numeric(as.character(combined_clean_data$mr_raw_mg_per_kg_per_h))

# Create the histogram for trophic position
ggplot(combined_clean_data, aes(x = trophic_position)) +
  geom_histogram(binwidth = 0.5, fill = "blue", color = "black") +
  labs(title = "Histogram of Trophic Position", x = "Trophic Position", y = "Frequency") +
  theme_minimal()

# Create the histogram for body mass
ggplot(combined_clean_data, aes(x = body_mass_in_grams)) +
  geom_histogram(binwidth = 0.5, fill = "blue", color = "black") +
  labs(title = "Histogram of Body Mass", x = "Body Mass", y = "Frequency") +
  theme_minimal()

# Remove rows with mr_raw_mg_per_kg_per_h equal to 1258240.0000
data_no_mmr_outliers <- combined_clean_data[combined_clean_data$mr_raw_mg_per_kg_per_h != 1258240.0000, ]

# Create the histogram for Metabolic Rate
ggplot(data_no_mmr_outliers, aes(x = mr_raw_mg_per_kg_per_h)) +
  geom_histogram(binwidth = 5.0, fill = "blue", color = "black") +
  labs(title = "Histogram of Metabolic Rate", x = "Metabolic Rate", y = "Frequency") +
  theme_minimal()



# Apply IQR outlier detection to each column
outliers_list <- lapply(df[ , sapply(df, is.numeric)], function(column) {
  Q1 <- quantile(column, 0.25)
  Q3 <- quantile(column, 0.75)
  IQR_value <- Q3 - Q1
  lower_bound <- Q1 - 1.5 * IQR_value
  upper_bound <- Q3 + 1.5 * IQR_value
  column[column < lower_bound | column > upper_bound]
})

# Print outliers for each column
outliers_list

### Removing Outliers from just the metabolic rate column
# Step 1: Identify outliers in "mr_raw_mg_per_kg_per_h" column
mr_raw_column <- combined_clean_data$mr_raw_mg_per_kg_per_h
Q1 <- quantile(mr_raw_column, 0.25)
Q3 <- quantile(mr_raw_column, 0.75)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value

# Find rows with outliers in "mr_raw_mg_per_kg_per_h"
outliers <- combined_clean_data$mr_raw_mg_per_kg_per_h < lower_bound | combined_clean_data$mr_raw_mg_per_kg_per_h > upper_bound

# Create a new dataset without those rows
outliers_removed_data <- combined_clean_data[!outliers, ]

# View the new dataset without outliers in "mr_raw_mg_per_kg_per_h"
print(outliers_removed_data)

outliers_removed_data <- subset(
  combined_clean_data,
  mr_raw_mg_per_kg_per_h >= lower_bound & mr_raw_mg_per_kg_per_h <= upper_bound
)
View(outliers_removed_data)

# ggplot2 histogram
ggplot(outliers_removed_data, aes(x = mr_raw_mg_per_kg_per_h)) +
  geom_histogram(binwidth = 5, color = "black", fill = "lightblue") +
  labs(title = "Histogram of Metabolic Rate (No Outliers)",
       x = "Metabolic Rate (mg/kg/h)",
       y = "Frequency")


#write.csv(outliers_removed_data, "outliers_removed_data.csv", row.names = FALSE)#









